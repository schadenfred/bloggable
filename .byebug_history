c
continue
@article = Article.new(article_params.merge(bloggable_type: @bloggable.class.to_s))
@article = Article.new(article_params.merge(:bloggable_type: @bloggable.class.to_s))
@article = Article.new(article_params.merge(:bloggable_type: @bloggable.class.to_s)
@article = Article.new(article_params)
  included do
c
Article.new
@bloggable.articles
c
@bloggable
params
@article
Org.bloggable?
Org
c
Bloggable::BloggableModels
Bloggable.new
Bloggable
c
@bloggable.articles.new
@bloggable
@bloggable.articles
c
Org.reflect_on_all_associations
@bloggable
c
@bloggable.articles
@bloggable
c
@bloggable.articles.new
@bloggable.new
@bloggable
c
url[-2]
@bloggable
c
url[-2].classify.safe_constantize.find(url[-1])
url[-2]
url
continue
[cc
url = URI(request.referrer).path.split("/articles").first.split("/")[-2].classify.constantize.find(
url = URI(request.referrer).path.split("/articles").first.split("/")[-2].classify
url = URI(request.referrer).path.split("/articles").first.split("/")[-2].klassify
url = URI(request.referrer).path.split("/articles").first.split("/")[-2]
url = URI(request.referrer).path.split("/articles").first.split("/").size
url = URI(request.referrer).path.split("/articles").first.split("/")[-1]
url = URI(request.referrer).path.split("/articles").first.split("/")
url = URI(request.referrer).path.split("/articles").first
url = URI(request.referrer).path.split("/articles")
url = URI(request.referrer).path
url.path.split("/articles").first
url.path.split("/articles").first.empty?
url.path.split("/articles").first
url.path
url
c
url.path
url = URI(request.referrer)
URI(request.referrer)
request.referrer.split("/articles").first
request.controller_class
request.controller
request.referrer.split("/articles").first.split("/")[-2]
request.referrer.split("/articles").first.split("/")[-1]
request.referrer.split("/articles").first.split("/")
request.referrer.split("/articles").first
request.referrer.split("/articles")
request.referrer.split("/articles/new/")
request.referrer
request.path
request.url
c
request.headers
request.headers.url
request.headers
headers.url
uri
url
headers
params
headers.url
headers
request.headers.url
request.headers
c
request.url
request
c
request.referer.split("/articles/")
request.referef.split("/articles/")
request.refere.split("/articles/")
request.referrer
request.http_referrer
request.url
request.pretty_print_inspect
request.fullpath
request.form_data?
request.methods
request.methods.grep(/referer/)
request.referer_path
request.referer.path
request.referer
request.path
c
request.path
params
c
requc
request.referer
c
request.referer
c
request.referer
c
request.referrer
c
request.referrer
request.referer
c
request.referrer
c
request.referrer
c
request.referrer
c
request.referrer
c
request.referrer
c
request.referrer
c
request.referrer
request
c
request.url
c
request.referrer
referrer
request.url
c
attrs
c
article_attrs
article_params
params
c
article_attrs
c
article_attrs
c
article_attrs
c
params
c
article
c
article_params
params
c
@article.errors
@article.save
c
@article.errors
@article.save
c
@article.errors
@article.save
c
@article.errors
@article.save
@article.valid?
@article
c
params
@article
c
@article.errors.messages
@article.save
@article
c
@article.errors.messages
@article.save
@article
c
